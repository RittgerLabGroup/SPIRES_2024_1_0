%---------------------------------------------------------------------------------------
% Creation of the modis-size and sinusoidal-referenced ancillary data necessary for
% snowToday processes:
% regions masks, elevations, slopes, aspects, canopy heights, water and land masks.
% Generation for the tiles that compose a big region. E.g. USAlaska, ASHimalaya, ...
% Does not include the masks for drainage basins HUC2, HUC4.
% Files in .geotiff and .mat format.
% NB: Before launching the script, we need to make these operations, outside of the
% script:
% - cut the canopy file to the region
% (Simard_Pinto_3DGlobalVeg_L3C_Alaska_cut.tif) and rename and put it in
%   canopyheightPath.
% - get the canopy cover file, cut it in big regions (using QGis gdal clip by extent
%     drawn on map, 
%     nodata =255, options -co COMPRESS=LZW, and put it in canopycoverSourcePath
%     (modis_ancillary/canopycover_tmp).
%     Source: https://land.copernicus.eu/en/products/global-dynamic-land-cover/copernicus-global-land-service-land-cover-100m-collection-3-epoch-2019-globe#download
%     https://zenodo.org/records/3939050
%     Copernicus Global Land Service: Land Cover 100m: collection 3: epoch 2019: Globe.
% - get the elevation tiles, rename them and put them in elevationSourcePaths.
% - get the mod44w v006 hdf tiles, and put them in
%    TileRegionAncillaryDataSetup.subdirectories.modisHistMod44w.
%       NB: all mod44w v006 2015 tiles have been downloaded to this dir. Data found on
% - get the mod09ga tiles, and put them in
%    https://lpdaac.usgs.gov/products/mod44wv006/#tools
%   TileRegionAncillaryDataSetup.subdirectories.modisNrtMod09ga. NB: this is version 3.2
%   of ancillary data.
%
% NB: 2024-02-24. mod44w have been updated v6.1 by LPDAAC until 2022, including
%   Antarctica
%   tiles. We have to think about what we'll do with this, having some time until we
%   start thinking about Antarctica.
%   NEw link: https://e4ftl01.cr.usgs.gov//MOLT/MOD44W.061/ (for v3.3 of ancillary).
%
% After running the script, open QGIS and run the model
% qgisGetStcFalsePositiveModisTile.model3 on the land tiles produced by this script
% using an updated global false positive (=dry lakes) polygon vector file, to generate
% the raster tiles of false positives.
%
% Uses makeSinusoidProj.m
% v3.alaska
% sebastien.lenard@colorado.edu
% 04/06/2023
%---------------------------------------------------------------------------------------

% Update this when changing platform:
%---------------------------------------------------------------------------------------
codePath1 = ['/projects/', getenv('USER'), '/MATLAB/esp/tbx/ESPToolbox'];
codePath2 = ['/projects/', getenv('USER'), '/MATLAB/RasterProjection'];
codePath3 = ['/projects/', getenv('USER'), '/MATLAB/esp/updates/Regions'];
addpath(genpath(codePath1));
addpath(genpath(codePath2));
addpath(genpath(codePath3));

scratchPath = getenv('espScratchDir'); % getenv('slurmScratchDir2');

% Update this when changing region:
%---------------------------------------------------------------------------------------
regionName = 'Antarctica'; %'all'; %'others'; 'easternNorthAmerica'; %'westernUS'; %'AMAndes'; 'ASHimalaya'; 'EURAlps'; %USAlaska';'OCNewZealand'

% Update this when changing source files:
% Note that these files should be stored in modis_ancillary\canopyheight_tmp and
% modis_ancillary\elevation_tmp.
%---------------------------------------------------------------------------------------
% Data from the USGS Gmted2010 product
% https://topotools.cr.usgs.gov/gmted_viewer/viewer.htm (median 7.5 arc sec.)
% NB: we suppose that the set of Gmted2010 files in variable elevationSourceFilenames
% cover the full spectruum of the region modis tiles, but we don't know exactly which
% file covers what.
%
% NB: The Gmted2010 median 7.5 arc sec don't cover Greenland and Antarctica. 2024-02-23.
%   We need to get the mean 30 arc sec and then increase the resolution of those tiles,
%   and merge them with median 7.5 arc, by replacing 0 values in 7.5 arc sec by values
%   from the mean 30 arc sec.                                                   @warning
%                                                                                  @todo
% NB: For lowering resolution, we must use a not nearest neighbor, to have not-weird
%   aspect/slope values. => choose an appropriate method.                          @todo
% NB: There's a problem with extreme Asia East (~ 180E/W), which are cut between 2.
%                                                                               @tocheck

% Specific groupingby big regions for canopy cover.
regionNameForCanopyCover = 'Antarctica';
switch regionNameForCanopyCover
    case 'AMAndes'
        tileRegionNamesForCanopyCover = {'h10v09', 'h10v10', 'h11v10', 'h11v11', ...
            'h11v12', 'h12v11', 'h12v12', ...
            'h12v13', 'h13v13', 'h13v14', 'h14v14'};
        canopycoverSourceFilename = 'h11v09-h14v14_LC100_global_v3.0.1_2019.tif';
    case 'OCNewZealand' % and south Australia.
        tileRegionNamesForCanopyCover = {'h28v12', 'h28v13', 'h29v12', 'h29v13', ...
            'h30v12', 'h30v13', 'h31v12', ...
            'h31v13', 'h32v12'};
        canopycoverSourceFilename = 'h28v14-h32v12_LC100_global_v3.0.1_2019.tif';
    case 'USAlaska' % and Canada.
        tileRegionNamesForCanopyCover = {'h07v03', 'h08v03', 'h09v02', 'h09v03', ...
            'h10v02', 'h10v03', 'h11v01', 'h11v02', 'h11v03', 'h12v01', 'h12v02', ...
            'h12v03', 'h13v01', 'h13v02', 'h13v03', 'h14v01', 'h14v02', 'h14v03'};
        canopycoverSourceFilename = 'h07v01-h14v03_LC100_global_v3.0.1_2019.tif';
    case 'westernUS' % and eastern US
        tileRegionNamesForCanopyCover = {'h08v04', 'h08v05', 'h09v04', 'h09v05', ...
            'h10v04', 'h10v05', 'h11v04', 'h11v05', 'h12v04', 'h12v05', 'h13v04', ...
            'h14v04'};
        canopycoverSourceFilename = 'h08v04-h14v05_LC100_global_v3.0.1_2019.tif';
    case 'h15v14-h28v13'
        tileRegionNamesForCanopyCover = {'h05v13', 'h15v14', 'h16v14', 'h17v13', 'h20v13', ...
            'h21v13', 'h22v13', 'h22v14', 'h27v14', 'h28v14'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h00v00-h24v01'
        tileRegionNamesForCanopyCover = {'h11v01', 'h12v01', 'h13v01', 'h14v01', ...
            'h15v01', 'h16v01', 'h17v01', 'h18v01', 'h19v01', 'h20v01', 'h21v01', ...
            'h22v01', 'h23v01', 'h24v01', 'h16v00', 'h17v00', 'h18v00', 'h19v00'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h15v02-h26v02'
        tileRegionNamesForCanopyCover = {'h15v02', 'h16v02', 'h17v02', 'h18v02', ...
            'h19v02', 'h20v02', 'h21v02', 'h22v02', 'h23v02', 'h24v02', 'h25v02', ...
            'h26v02'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h17v03-h29v03'
        tileRegionNamesForCanopyCover = {'h17v03', 'h18v03', 'h19v03', 'h20v03', ...
            'h21v03', 'h22v03', 'h23v03', 'h24v03', 'h25v03', 'h26v03', 'h27v03', ...
            'h28v03', 'h29v03'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h17v04-h28v04'
        tileRegionNamesForCanopyCover = {'h17v04', 'h18v04', 'h19v04', 'h20v04', ...
            'h21v04', 'h22v04', 'h23v04', 'h24v04', 'h25v04', 'h26v04', 'h27v04', ...
            'h28v04'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h15v05-h29v05'
        tileRegionNamesForCanopyCover = {'h15v05', 'h16v05', 'h17v05', 'h18v05', ...
            'h19v05', 'h20v05', 'h21v05', 'h22v05', 'h23v05', 'h24v05', 'h25v05', ...
            'h26v05', 'h27v05', 'h28v05', 'h29v05'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h16v06-h29v06'
        tileRegionNamesForCanopyCover = {'h16v06', 'h17v06', 'h18v06', 'h19v06', ...
            'h20v06', 'h21v06', 'h22v06', 'h23v06', 'h24v06', 'h25v06', 'h26v06', ...
            'h27v06', 'h28v06', 'h29v06'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h21v08-h22v09'
        tileRegionNamesForCanopyCover = {'h21v08', 'h22v08', 'h21v09', 'h22v09'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h31v09-h32v09'
        tileRegionNamesForCanopyCover = {'h31v09', 'h32v09'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h15v03'
        tileRegionNamesForCanopyCover = {'h15v03'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h06v03'
        tileRegionNamesForCanopyCover = {'h06v03'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'h02v06-h03v07'
        tileRegionNamesForCanopyCover = {'h02v06', 'h03v06', 'h03v07'};
        canopycoverSourceFilename = ...
            [regionNameForCanopyCover, '_LC100_global_v3.0.1_2019.tif'];
    case 'Antarctica'
        tileRegionNamesForCanopyCover = {'h14v15', 'h14v16', 'h14v17', 'h15v15', ...
        'h15v16', 'h15v17', ...
        'h16v16', 'h16v17', 'h17v15', 'h17v16', 'h17v17', 'h18v15', 'h18v16', ...
        'h18v17', 'h19v15', 'h19v16', 'h19v17', 'h20v15', 'h20v16', 'h20v17', ...
        'h21v15', 'h21v16', 'h21v17', 'h22v15', 'h22v16', 'h23v15', 'h23v16'};
        canopycoverSourceFilename = ...
            ['h02v06-h03v07_LC100_global_v3.0.1_2019.tif']; % will set all to 0.
end
canopycoverPath = fullfile(scratchPath, ...
    'modis_ancillary', 'canopycover_tmp', canopycoverSourceFilename);
    
% Grouping for other ancillaries.
if strcmp(regionName, 'USAlaska')
    tileRegionNames = {'h07v03', 'h08v03', 'h09v02', 'h09v03', 'h10v02', 'h10v03', ...
            'h11v02', 'h11v03', 'h12v01', 'h12v02', 'h13v01', 'h13v02'}; % excluded h07v03. @tobeaware
    canopyheightFilename = 'Simard_Pinto_3DGlobalVeg_L3C_Alaska_cut.tif';
    elevationSourceFilenames = {'50N150W_20101117_gmted_med075.tif', ...
            '50N180W_20101117_gmted_med075.tif', ...
            '70N150W_20101117_gmted_med075.tif', ...
            '70N180W_20101117_gmted_med075.tif'};
elseif strcmp(regionName, 'ASHimalaya')
    tileRegionNames = {'h22v04', 'h22v05', 'h23v04', 'h23v05', 'h23v06', 'h24v04', ...
        'h24v05', 'h24v06', 'h25v05', 'h25v06', 'h26v05', 'h26v06'};
    canopyheightFilename = 'Simard_Pinto_3DGlobalVeg_L3C_ASHimalaya_cut.tif';
    elevationSourceFilenames = {'10N030E_20101117_gmted_med075.tif', ...
        '10N060E_20101117_gmted_med075.tif', ...
        '10N090E_20101117_gmted_med075.tif', ...
        '30N030E_20101117_gmted_med075.tif', ...
        '30N060E_20101117_gmted_med075.tif', ...
        '30N090E_20101117_gmted_med075.tif'};
elseif strcmp(regionName, 'EURAlps')
    tileRegionNames = {'h18v04', 'h19v04'};
    canopyheightFilename = 'Simard_Pinto_3DGlobalVeg_L3C_Europe_cut.tif';
    elevationSourceFilenames = {'50N000E_20101117_gmted_med075.tif', ...
            '30N000E_20101117_gmted_med075.tif'};
elseif strcmp(regionName, 'AMAndes')
    tileRegionNames = {'h10v09', 'h10v10', 'h11v10', 'h11v11', 'h11v12', 'h12v12', ...
        'h12v13', 'h13v13', 'h13v14'};
    canopyheightFilename = 'Simard_Pinto_3DGlobalVeg_L3C_AMAndes_cut.tif';
    elevationSourceFilenames = {'10S090W_20101117_gmted_med075.tif', ...
        '30S090W_20101117_gmted_med075.tif', ...
        '50S090W_20101117_gmted_med075.tif', ...
        '30S060W_20101117_gmted_med075.tif', ...
        '50S060W_20101117_gmted_med075.tif', ...
        '70S090W_20101117_gmted_med075.tif'};
elseif strcmp(regionName, 'westernUS')
    tileRegionNames = {'h08v04', 'h08v05', 'h09v04', 'h09v05', 'h10v04'};
    canopyheightFilename = 'Simard_Pinto_3DGlobalVeg_L3C_westernUS_cut.tif';
    elevationSourceFilenames = {'30N150W_20101117_gmted_med075.tif', ...
        '30N120W_20101117_gmted_med075.tif'};
elseif strcmp(regionName, 'easternNorthAmerica')
    tileRegionNames = {'h10v05', 'h11v04', 'h11v05', 'h12v04', 'h12v05', ...
        'h13v03', 'h13v05', 'h14v01', 'h14v02', ...
        'h14v03', 'h14v04', 'h13v14'}; % there's a problem here with h13v14.
    % canopyheightFilename = TO GENERATE;
    elevationSourceFilenames = {'70N150W_20101117_gmted_med075.tif', ...
        '70N120W_20101117_gmted_med075.tif', ...
        '50N120W_20101117_gmted_med075.tif', ...
        '50N090W_20101117_gmted_med075.tif', ...
        '50N060W_20101117_gmted_med075.tif', ...
        '30N120W_20101117_gmted_med075.tif', ...
        '30N090W_20101117_gmted_med075.tif', ...
        '30N060W_20101117_gmted_med075.tif', ...
        '10N120W_20101117_gmted_med075.tif', ...
        '10N090W_20101117_gmted_med075.tif'};
elseif strcmp(regionName, 'OCNewZealand')
    tileRegionNames = {'h29v13', 'h30v13'};    % NB: not all tiles 20241001,    @warning
    % Didn't put canopyheightFilename and elevationSourceFilenames 20241001.
elseif strcmp(regionName, 'Antarctica')
    tileRegionNames = {'h29v13', 'h30v13', 'h14v17', 'h15v15', 'h15v16', 'h15v17', ...
        'h16v16', 'h16v17', 'h17v15', 'h17v16', 'h17v17', 'h18v15', 'h18v16', ...
        'h18v17', 'h19v15', 'h19v16', 'h19v17', 'h20v15', 'h20v16', 'h20v17', ...
        'h21v15', 'h21v16', 'h21v17', 'h22v15', 'h22v16', 'h23v15', 'h23v16', ...
        'h33v07'}; % NB: h33v07 is technically part of Antarctica only here,    @warning
    canopyheightFilename = 'Simard_Pinto_3DGlobalVeg_L3C_Alaska_cut.tif'; % INCORRECT to change @warning
    elevationSourceFilenames = {'50N150W_20101117_gmted_med075.tif', ...
            '50N180W_20101117_gmted_med075.tif', ...
            '70N150W_20101117_gmted_med075.tif', ...
            '70N180W_20101117_gmted_med075.tif'};                         % INCORRECT to change @warning
    % NB: Antarctica is v3.3 and not v3.2, due to the use of mod44w.061 for land/water.
elseif strcmp(regionName, 'others')
    tileRegionNames = {'h00v08', 'h00v09', 'h00v10', 'h01v07', 'h01v08', 'h01v09', 'h01v10', 'h01v11', 'h02v06', 'h02v08', 'h02v09', 'h02v10', 'h02v11', 'h03v06', 'h03v07', 'h03v09', 'h03v10', 'h03v11', 'h04v09', 'h04v10', 'h04v11', 'h05v10', 'h05v11', 'h05v13', 'h06v03', 'h06v11', 'h07v05', 'h07v06', 'h07v07', 'h08v06', 'h08v07', 'h08v08', 'h08v09', 'h08v11', 'h09v06', 'h09v07', 'h09v08', 'h09v09', 'h10v05', 'h10v06', 'h10v07', 'h10v08', 'h10v11', 'h11v01', 'h11v04', 'h11v05', 'h11v06', 'h11v07', 'h11v08', 'h11v09', 'h12v03', 'h12v04', 'h12v05', 'h12v07', 'h12v08', 'h12v09', 'h12v10', 'h12v11', 'h13v03', 'h13v04', 'h13v08', 'h13v09', 'h13v10', 'h13v11', 'h13v12', 'h14v01', 'h14v02', 'h14v03', 'h14v04', 'h14v09', 'h14v10', 'h14v11', 'h14v14', 'h15v01', 'h15v02', 'h15v03', 'h15v05', 'h15v07', 'h15v11', 'h15v14', 'h16v00', 'h16v01', 'h16v02', 'h16v05', 'h16v06', 'h16v07', 'h16v08', 'h16v09', 'h16v12', 'h16v14', 'h17v00', 'h17v01', 'h17v02', 'h17v03', 'h17v04', 'h17v05', 'h17v06', 'h17v07', 'h17v08', 'h17v10', 'h17v12', 'h17v13', 'h18v00', 'h18v01', 'h18v02', 'h18v03', 'h18v05', 'h18v06', 'h18v07', 'h18v08', 'h18v09', 'h19v00', 'h19v01', 'h19v02', 'h19v03', 'h19v05', 'h19v06', 'h19v07', 'h19v08', 'h19v09', 'h19v10', 'h19v11', 'h19v12', 'h20v01', 'h20v02', 'h20v03', 'h20v04', 'h20v05', 'h20v06', 'h20v07', 'h20v08', 'h20v09', 'h20v10', 'h20v11', 'h20v12', 'h20v13', 'h21v01', 'h21v02', 'h21v03', 'h21v04', 'h21v05', 'h21v06', 'h21v07', 'h21v08', 'h21v09', 'h21v10', 'h21v11', 'h21v13', 'h22v01', 'h22v02', 'h22v03', 'h22v06', 'h22v07', 'h22v08', 'h22v09', 'h22v10', 'h22v11', 'h22v13', 'h22v14', 'h23v01', 'h23v02', 'h23v03', 'h23v07', 'h23v08', 'h23v09', 'h23v10', 'h23v11', 'h24v01', 'h24v02', 'h24v03', 'h24v07', 'h24v12', 'h25v02', 'h25v03', 'h25v04', 'h25v07', 'h25v08', 'h25v09', 'h26v02', 'h26v03', 'h26v04', 'h26v07', 'h26v08', 'h27v03', 'h27v04', 'h27v05', 'h27v06', 'h27v07', 'h27v08', 'h27v09', 'h27v10', 'h27v11', 'h27v12', 'h27v14', 'h28v03', 'h28v04', 'h28v05', 'h28v06', 'h28v07', 'h28v08', 'h28v09', 'h28v10', 'h28v11', 'h28v12', 'h28v13', 'h28v14', 'h29v03', 'h29v05', 'h29v06', 'h29v07', 'h29v08', 'h29v09', 'h29v10', 'h29v11', 'h29v12', 'h29v13', 'h30v05', 'h30v06', 'h30v07', 'h30v08', 'h30v09', 'h30v10', 'h30v11', 'h30v12', 'h30v13', 'h31v06', 'h31v07', 'h31v08', 'h31v09', 'h31v10', 'h31v11', 'h31v12', 'h31v13', 'h32v07', 'h32v08', 'h32v09', 'h32v10', 'h32v11', 'h32v12', 'h33v08', 'h33v09', 'h33v10', 'h33v11', 'h34v07', 'h34v08', 'h34v09', 'h34v10', 'h35v08', 'h35v09', 'h35v10'};
else
    % all regions by default.
    tileRegionNames = {'h00v08', 'h00v09', 'h00v10', 'h01v07', 'h01v08', 'h01v09', 'h01v10', 'h01v11', 'h02v06', 'h02v08', 'h02v09', 'h02v10', 'h02v11', 'h03v06', 'h03v07', 'h03v09', 'h03v10', 'h03v11', 'h04v09', 'h04v10', 'h04v11', 'h05v10', 'h05v11', 'h05v13', 'h06v03', 'h06v11', 'h07v03', 'h07v05', 'h07v06', 'h07v07', 'h08v03', 'h08v04', 'h08v05', 'h08v06', 'h08v07', 'h08v08', 'h08v09', 'h08v11', 'h09v02', 'h09v03', 'h09v04', 'h09v05', 'h09v06', 'h09v07', 'h09v08', 'h09v09', 'h10v02', 'h10v03', 'h10v04', 'h10v05', 'h10v06', 'h10v07', 'h10v08', 'h10v09', 'h10v10', 'h10v11', 'h11v01', 'h11v02', 'h11v03', 'h11v04', 'h11v05', 'h11v06', 'h11v07', 'h11v08', 'h11v09', 'h11v10', 'h11v11', 'h11v12', 'h12v01', 'h12v02', 'h12v03', 'h12v04', 'h12v05', 'h12v07', 'h12v08', 'h12v09', 'h12v10', 'h12v11', 'h12v12', 'h12v13', 'h13v01', 'h13v02', 'h13v03', 'h13v04', 'h13v08', 'h13v09', 'h13v10', 'h13v11', 'h13v12', 'h13v13', 'h13v14', 'h14v01', 'h14v02', 'h14v03', 'h14v04', 'h14v09', 'h14v10', 'h14v11', 'h14v14', 'h15v01', 'h15v02', 'h15v03', 'h15v05', 'h15v07', 'h15v11', 'h15v14', 'h16v00', 'h16v01', 'h16v02', 'h16v05', 'h16v06', 'h16v07', 'h16v08', 'h16v09', 'h16v12', 'h16v14', 'h17v00', 'h17v01', 'h17v02', 'h17v03', 'h17v04', 'h17v05', 'h17v06', 'h17v07', 'h17v08', 'h17v10', 'h17v12', 'h17v13', 'h18v00', 'h18v01', 'h18v02', 'h18v03', 'h18v04', 'h18v05', 'h18v06', 'h18v07', 'h18v08', 'h18v09', 'h19v00', 'h19v01', 'h19v02', 'h19v03', 'h19v04', 'h19v05', 'h19v06', 'h19v07', 'h19v08', 'h19v09', 'h19v10', 'h19v11', 'h19v12', 'h20v01', 'h20v02', 'h20v03', 'h20v04', 'h20v05', 'h20v06', 'h20v07', 'h20v08', 'h20v09', 'h20v10', 'h20v11', 'h20v12', 'h20v13', 'h21v01', 'h21v02', 'h21v03', 'h21v04', 'h21v05', 'h21v06', 'h21v07', 'h21v08', 'h21v09', 'h21v10', 'h21v11', 'h21v13', 'h22v01', 'h22v02', 'h22v03', 'h22v04', 'h22v05', 'h22v06', 'h22v07', 'h22v08', 'h22v09', 'h22v10', 'h22v11', 'h22v13', 'h22v14', 'h23v01', 'h23v02', 'h23v03', 'h23v04', 'h23v05', 'h23v06', 'h23v07', 'h23v08', 'h23v09', 'h23v10', 'h23v11', 'h24v01', 'h24v02', 'h24v03', 'h24v04', 'h24v05', 'h24v06', 'h24v07', 'h24v12', 'h25v02', 'h25v03', 'h25v04', 'h25v05', 'h25v06', 'h25v07', 'h25v08', 'h25v09', 'h26v02', 'h26v03', 'h26v04', 'h26v05', 'h26v06', 'h26v07', 'h26v08', 'h27v03', 'h27v04', 'h27v05', 'h27v06', 'h27v07', 'h27v08', 'h27v09', 'h27v10', 'h27v11', 'h27v12', 'h27v14', 'h28v03', 'h28v04', 'h28v05', 'h28v06', 'h28v07', 'h28v08', 'h28v09', 'h28v10', 'h28v11', 'h28v12', 'h28v13', 'h28v14', 'h29v03', 'h29v05', 'h29v06', 'h29v07', 'h29v08', 'h29v09', 'h29v10', 'h29v11', 'h29v12', 'h29v13', 'h30v05', 'h30v06', 'h30v07', 'h30v08', 'h30v09', 'h30v10', 'h30v11', 'h30v12', 'h30v13', 'h31v06', 'h31v07', 'h31v08', 'h31v09', 'h31v10', 'h31v11', 'h31v12', 'h31v13', 'h32v07', 'h32v08', 'h32v09', 'h32v10', 'h32v11', 'h32v12', 'h33v08', 'h33v09', 'h33v10', 'h33v11', 'h34v07', 'h34v08', 'h34v09', 'h34v10', 'h35v08', 'h35v09', 'h35v10'};
end

%{
% Once all slope and aspect files were calculated from the elevation USGS file, we don't need to regenerate them.
% Below is the list of elevation USGS files.

elevationSourceFilenames = {'10N000E_20101117_gmted_med075.tif', '10N030E_20101117_gmted_med075.tif', '10N030W_20101117_gmted_med075.tif', '10N060E_20101117_gmted_med075.tif', '10N060W_20101117_gmted_med075.tif', '10N090E_20101117_gmted_med075.tif', '10N090W_20101117_gmted_med075.tif', '10N120E_20101117_gmted_med075.tif', '10N120W_20101117_gmted_med075.tif', '10N150E_20101117_gmted_med075.tif', '10N150W_20101117_gmted_med075.tif', '10N180W_20101117_gmted_med075.tif', '10S000E_20101117_gmted_med075.tif', '10S030E_20101117_gmted_med075.tif', '10S030W_20101117_gmted_med075.tif', '10S060E_20101117_gmted_med075.tif', '10S060W_20101117_gmted_med075.tif', '10S090E_20101117_gmted_med075.tif', '10S090W_20101117_gmted_med075.tif', '10S120E_20101117_gmted_med075.tif', '10S120W_20101117_gmted_med075.tif', '10S150E_20101117_gmted_med075.tif', '10S150W_20101117_gmted_med075.tif', '10S180W_20101117_gmted_med075.tif', '30N000E_20101117_gmted_med075.tif', '30N030E_20101117_gmted_med075.tif', '30N030W_20101117_gmted_med075.tif', '30N060E_20101117_gmted_med075.tif', '30N060W_20101117_gmted_med075.tif', '30N090E_20101117_gmted_med075.tif', '30N090W_20101117_gmted_med075.tif', '30N120E_20101117_gmted_med075.tif', '30N120W_20101117_gmted_med075.tif', '30N150E_20101117_gmted_med075.tif', '30N150W_20101117_gmted_med075.tif', '30N180W_20101117_gmted_med075.tif', '30S000E_20101117_gmted_med075.tif', '30S030E_20101117_gmted_med075.tif', '30S030W_20101117_gmted_med075.tif', '30S060E_20101117_gmted_med075.tif', '30S060W_20101117_gmted_med075.tif', '30S090E_20101117_gmted_med075.tif', '30S090W_20101117_gmted_med075.tif', '30S120E_20101117_gmted_med075.tif', '30S120W_20101117_gmted_med075.tif', '30S150E_20101117_gmted_med075.tif', '30S150W_20101117_gmted_med075.tif', '30S180W_20101117_gmted_med075.tif', '50N000E_20101117_gmted_med075.tif', '50N030E_20101117_gmted_med075.tif', '50N030W_20101117_gmted_med075.tif', '50N060E_20101117_gmted_med075.tif', '50N060W_20101117_gmted_med075.tif', '50N090E_20101117_gmted_med075.tif', '50N090W_20101117_gmted_med075.tif', '50N120E_20101117_gmted_med075.tif', '50N120W_20101117_gmted_med075.tif', '50N150E_20101117_gmted_med075.tif', '50N150W_20101117_gmted_med075.tif', '50N180W_20101117_gmted_med075.tif', '50S000E_20101117_gmted_med075.tif', '50S030E_20101117_gmted_med075.tif', '50S030W_20101117_gmted_med075.tif', '50S060E_20101117_gmted_med075.tif', '50S060W_20101117_gmted_med075.tif', '50S090E_20101117_gmted_med075.tif', '50S090W_20101117_gmted_med075.tif', '50S120E_20101117_gmted_med075.tif', '50S120W_20101117_gmted_med075.tif', '50S150E_20101117_gmted_med075.tif', '50S150W_20101117_gmted_med075.tif', '50S180W_20101117_gmted_med075.tif', '70N000E_20101117_gmted_med075.tif', '70N030E_20101117_gmted_med075.tif', '70N030W_20101117_gmted_med075.tif', '70N060E_20101117_gmted_med075.tif', '70N060W_20101117_gmted_med075.tif', '70N090E_20101117_gmted_med075.tif', '70N090W_20101117_gmted_med075.tif', '70N120E_20101117_gmted_med075.tif', '70N120W_20101117_gmted_med075.tif', '70N150E_20101117_gmted_mea075.tif', '70N150W_20101117_gmted_med075.tif', '70N180W_20101117_gmted_med075.tif', '70S000E_20101117_gmted_med075.tif', '70S030E_20101117_gmted_med075.tif', '70S030W_20101117_gmted_med075.tif', '70S060E_20101117_gmted_med075.tif', '70S060W_20101117_gmted_med075.tif', '70S090E_20101117_gmted_med075.tif', '70S090W_20101117_gmted_med075.tif', '70S120E_20101117_gmted_med075.tif', '70S120W_20101117_gmted_med075.tif', '70S150E_20101117_gmted_med075.tif', '70S150W_20101117_gmted_med075.tif', '70S180W_20101117_gmted_med075.tif'};
%}

elevationFileLabel = '_elevation_gmted_med075';
aspectFileLabel = '_aspect_gmted_med075';
slopeFileLabel = '_slope_gmted_med075';
canopyheightFileLabel = '_canopyheight_simard_pinto_2011';
canopycoverFileLabel = '_canopycover_LC100_global_v301_2019';
    % Label before 20240919: '_canopycover_mod44b2022'; But the
    % mod44b are cut in high latitudes (within Alaska) and can't be used.
exampleRegionMaskFilename = 'westernUS_mask.mat'; % exampleRegionMaskFilename = 'h09v03_mask.mat'; % for others.

thisVersion = 'v3.2'; % v3.3 for Antarctica!!!                                  @warning

% Other configuration that shouldn't change much, except when moving out of modis.
%---------------------------------------------------------------------------------------

modisData = MODISData(label='v2023.1', versionOfAncillary='v3.2');
espEnv = ESPEnv(modisData = modisData, scratchPath = scratchPath);
%{
Before 2023-06-23:
georeferencing = struct(northwest = struct(x0 = -2.001534101036227e+07, ...
    y0 = 1.000778633335726e+07), tileInfo = struct(dx = 4.633127165279165e+02, ... %4.633127165279169e+02, ...
    dy = 4.633127165279165e+02, columnCount = 2400, rowCount = 2400));
%}

canopycoverPath = fullfile(scratchPath, ...
    'modis_ancillary', 'canopycover_tmp', canopycoverSourceFilename);
elevationSourcePaths = fullfile( ...
    scratchPath, ...
    'modis_ancillary', 'elevation_tmp', elevationSourceFilenames);
aspectSourceFilenames = strcat('aspect_', elevationSourceFilenames);
slopeSourceFilenames = strcat('slope_', elevationSourceFilenames);
aspectSourcePaths = fullfile( ...
    scratchPath, ...
    'modis_ancillary', 'aspect_tmp', aspectSourceFilenames);
slopeSourcePaths = fullfile( ...
    scratchPath, ...
    'modis_ancillary', 'slope_tmp', slopeSourceFilenames);
exampleRegionMaskPath = fullfile( ...
    scratchPath, ...
    'modis_ancillary', 'v3.1', 'region', exampleRegionMaskFilename);
%{
    % Mask for others.
    exampleRegionMaskPath = fullfile( ...
        scratchPath, ...
        'modis_ancillary', 'v3.2', 'region', exampleRegionMaskFilename);
%}
canopycoverLabel = 'canopycover';
canopyheightLabel = 'canopyheight';
ancillaryDataDirectories = {'aspect', 'canopycover', 'canopyheight', 'elevation', ...
    'land', 'slope', 'water'};
ancillaryDataDirectories = fullfile( ...
    scratchPath, 'modis_ancillary', ...
    thisVersion, ancillaryDataDirectories);
ancillaryDataFileLabels = {aspectFileLabel, canopycoverFileLabel, ...
    canopyheightFileLabel, ...
    elevationFileLabel, ['_land_mod44_' ...
    num2str(TileRegionAncillaryDataSetup.mod44wWaterThreshold * 100)], ...
    slopeFileLabel, ['_water_mod44_' ...
    num2str(TileRegionAncillaryDataSetup.mod44wWaterThreshold * 100)]};

warning('off', 'MATLAB:structOnObject');
% To be executed to generate all tile ancillary files.
%---------------------------------------------------------------------------------------
% NB: ice and modispolygon and landsubdivisions are generated using qgis models and not
% by this script.                                                               @warning
setup = TileRegionAncillaryDataSetup( ...
    espEnv = espEnv, ...
    parentDirectory = scratchPath, ...
    regionName = regionName, ...
    tileRegionNames = tileRegionNames, ...
    version = thisVersion);

% setup.generateTileProjectionInfoFiles();                  @obsolete
setup.generateTileMaskFiles(exampleRegionMaskPath);
setup.generateTileWaterAndLandFiles();
% setup.generateTileCanopycoverFilesFromMod44b(canopycoverFileLabel); obsolete 20240919.

% NB: canopy height not done on all tiles. Necessary for STC running!           @warning
% NB: elevation/aspect/slope not done for Greenland(?) or Antarctica.           @warning
setup.generateTileCanopyFiles(canopyheightLabel, canopyheightFileLabel, ...
    canopyheightPath);
setup.generateAspectSlopeFiles(elevationSourcePaths);
setup.generateTileTopographicFiles('int16', elevationFileLabel, ...
    elevationSourcePaths, 'elevation'); % see method header
    % for required slight twirking of the RasterReprojection\util\interpolateRaster.m
setup.generateTileTopographicFiles('uint16', aspectFileLabel, aspectSourcePaths, ...
    'aspect');
setup.generateTileTopographicFiles('uint8', slopeFileLabel, slopeSourcePaths, ...
    'slope');

% Canopy cover to be executed to generate all tile ancillary files.
%---------------------------------------------------------------------------------------   
setup = TileRegionAncillaryDataSetup( ...
    espEnv = espEnv, ...
    parentDirectory = scratchPath, ...
    regionName = regionNameForCanopyCover, ...
    tileRegionNames = tileRegionNamesForCanopyCover, ...
    version = thisVersion);
setup.generateTileCanopyFiles(canopycoverLabel, canopycoverFileLabel, ...
    canopycoverPath);   


% To be executed to generate ancillary files for the big region.
%---------------------------------------------------------------------------------------
setup = RegionAncillaryDataSetup( ...
    espEnv = espEnv, ...
    parentDirectory = scratchPath, ...
    regionName = regionName, ...
    tileRegionNames = tileRegionNames, ...
    version = thisVersion);
%setup.generateProjectionInfoFile();
setup.generateMaskFile(exampleRegionMaskPath);
setup.generateAggregatedFilesFromTileDataFiles(ancillaryDataDirectories, ...
    ancillaryDataFileLabels);
%{
% To be executed to add RefMatrix and inxMosaic to the Region masks            @obsolete
%---------------------------------------------------------------------------------------
allRegionNames = tileRegionNames;
allRegionNames{end + 1} = regionName;
for regionIdx = 1:length(allRegionNames)
    regionName = allRegionNames{regionIdx};
    landData = load(fullfile(ancillaryDataDirectories{4}, ...
        [regionName ancillaryDataFileLabels{4} '.mat']));
    indxMosaic = landData.data;
    RefMatrix = [[0, -landData.mapCellsReference.CellExtentInWorldX]; ...
        [landData.mapCellsReference.CellExtentInWorldX, 0]; ...
        [landData.mapCellsReference.XWorldLimits(1), ...
        landData.mapCellsReference.YWorldLimits(2)]];
    S = NaN;
    save(fullfile(scratchPath, 'modis_ancillary', ...
                'region', thisVersion, [regionName '_mask.mat']), 'indxMosaic', ...
                'RefMatrix', 'S', '-append');
end
%}
% To be executed to copy
